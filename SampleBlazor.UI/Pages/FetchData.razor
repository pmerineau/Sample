@page "/fetchdata"
@using Sample.Shared
@inject HttpClient httpClient

<PageTitle>Liste de client</PageTitle>

<h1>Liste de client</h1>

@if (clients == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var client in clients)
            {
                <tr>
                    <td>@client.Id</td>
                    <td>@client.Name</td>
                    <td>@client.Email</td>
                    <td><button class="btn btn-primary" @onclick="@(async () => await DeleteClient(client.Id))">X</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ClientGetDto[]? clients;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        clients = await httpClient.GetFromJsonAsync<ClientGetDto[]>("api/Clients");
    }

    private async Task DeleteClient(int id)
    {
        await httpClient.DeleteAsync($"api/Clients/{id}");
        await LoadData();
    }
}
